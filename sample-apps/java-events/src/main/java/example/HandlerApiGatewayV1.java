package example;

import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent;
import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyResponseEvent;

import java.util.HashMap;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

// Handler value: example.Handler
public class HandlerApiGatewayV1 implements RequestHandler<APIGatewayProxyRequestEvent, APIGatewayProxyResponseEvent>{

  private static final Logger logger = LoggerFactory.getLogger(HandlerApiGatewayV1.class);

  @Override
  public APIGatewayProxyResponseEvent handleRequest(APIGatewayProxyRequestEvent event, Context context)
  {
    logger.info("EVENT TYPE: " + event.getClass().toString());
    APIGatewayProxyResponseEvent response = new APIGatewayProxyResponseEvent();
    response.setIsBase64Encoded(false);
    response.setStatusCode(200);
    HashMap<String, String> headers = new HashMap<String, String>();
    headers.put("Content-Type", "text/html");
    response.setHeaders(headers);
    String body = event.getBody() != null ? event.getBody() : "Empty body";
    response.setBody("<!DOCTYPE html><html><head><title>" + body + "</title></head><body>" +
      "<h1>Welcome</h1><p>Page generated by a Lambda function.</p>" +
      "</body></html>");
    return response;
  }
}